let rec t#b = fun f -> fun n -> fun m -> fun last -> let t#f = (< m) n
              in match t#f as t#a with ( true
                 , []
                 , let t#n = f last in let t#l = (+ 1) m in (t#b t#l) t#n )
                 | (false, [], last)
let repeat = fun n -> fun f -> ((t#b f) n) 0