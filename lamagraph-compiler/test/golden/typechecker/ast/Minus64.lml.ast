(Module
 ~-: int -> int
 >=: int -> int -> bool
 bad_number_plus: int
 /: int -> int -> int
 f0: int -> int
 *: int -> int -> int
 ::: forall 'a. ('a * 'a list) -> 'a list
 <: int -> int -> bool
 []: forall 'a. 'a list
 f3: int -> int
 bad_number: int
 bad_number_spaced: int
 -: int -> int -> int
 +: int -> int -> int
 >: int -> int -> bool
 f4: forall 's. (int -> 's) -> 's
 <=: int -> int -> bool
 Some: forall 'a. 'a -> 'a option
 None: forall 'a. 'a option
 false: bool
 f1: int -> int
 true: bool
 f2: int -> int
 print_int: int -> ()
 (Just
 (L
  { :1:8-15 }
  ("Minus64")))
 [ (L
    { :3:1-45 }
    (ValD
     (L
      { :3:5-45 }
      (NonRec
       [ (L
          { :3:5-45 }
          (Bind
           bad_number_spaced: int
           (L
            { :3:5-22 }
            (PatVar
             int
             (L
              { :3:5-22 }
              "bad_number_spaced")))
           (L
            { :3:25-45 }
            (ExprConstant int int
             -9223372036854775808)))) ]))))
 , (L
    { :4:1-36 }
    (ValD
     (L
      { :4:5-36 }
      (NonRec
       [ (L
          { :4:5-36 }
          (Bind
           bad_number: int
           (L
            { :4:5-15 }
            (PatVar
             int
             (L
              { :4:5-15 }
              "bad_number")))
           (L
            { :4:16-36 }
            (ExprConstant int int
             -9223372036854775808)))) ]))))
 , (L
    { :5:1-40 }
    (ValD
     (L
      { :5:5-40 }
      (NonRec
       [ (L
          { :5:5-40 }
          (Bind
           bad_number_plus: int
           (L
            { :5:5-20 }
            (PatVar
             int
             (L
              { :5:5-20 }
              "bad_number_plus")))
           (L
            { :5:21-40 }
            (ExprConstant int int
             9223372036854775807)))) ]))))
 , (L
    { :8:1-37 }
    (ValD
     (L
      { :8:5-37 }
      (NonRec
       [ (L
          { :8:5-37 }
          (Bind
           f0: int -> int
           (L
            { :8:5-7 }
            (PatVar
             int -> int
             (L
              { :8:5-7 }
              "f0")))
           (L
            { :8:8-37 }
            (ExprFunction
             int -> int
             (L
              { :8:8-9 }
              (PatVar
               int
               (L
                { :8:8-9 }
                "x")))
             (L
              { :8:12-37 }
              (ExprApply
               int
               (L
                { :8:14-15 }
                (ExprIdent
                 int -> int -> int
                 "+"))
               [ (L
                  { :8:12-13 }
                  (ExprIdent
                   int
                   "x"))
               , (L
                  { :8:17-37 }
                  (ExprConstant int int
                   -9223372036854775808)) ])))))) ]))))
 , (L
    { :9:1-37 }
    (ValD
     (L
      { :9:5-37 }
      (NonRec
       [ (L
          { :9:5-37 }
          (Bind
           f1: int -> int
           (L
            { :9:5-7 }
            (PatVar
             int -> int
             (L
              { :9:5-7 }
              "f1")))
           (L
            { :9:8-37 }
            (ExprFunction
             int -> int
             (L
              { :9:8-9 }
              (PatVar
               int
               (L
                { :9:8-9 }
                "x")))
             (L
              { :9:12-37 }
              (ExprApply
               int
               (L
                { :9:14-15 }
                (ExprIdent
                 int -> int -> int
                 "+"))
               [ (L
                  { :9:12-13 }
                  (ExprIdent
                   int
                   "x"))
               , (L
                  { :9:16-37 }
                  (ExprApply
                   int
                   (L
                    { :9:16-17 }
                    (ExprIdent
                     int -> int
                     "~-"))
                   [ (L
                      { :9:18-37 }
                      (ExprConstant int int
                       9223372036854775807)) ])) ])))))) ]))))
 , (L
    { :10:1-34 }
    (ValD
     (L
      { :10:5-34 }
      (NonRec
       [ (L
          { :10:5-34 }
          (Bind
           f2: int -> int
           (L
            { :10:5-7 }
            (PatVar
             int -> int
             (L
              { :10:5-7 }
              "f2")))
           (L
            { :10:8-34 }
            (ExprFunction
             int -> int
             (L
              { :10:8-9 }
              (PatVar
               int
               (L
                { :10:8-9 }
                "x")))
             (L
              { :10:12-34 }
              (ExprApply
               int
               (L
                { :10:13-14 }
                (ExprIdent
                 int -> int -> int
                 "-"))
               [ (L
                  { :10:12-13 }
                  (ExprIdent
                   int
                   "x"))
               , (L
                  { :10:15-34 }
                  (ExprConstant int int
                   9223372036854775807)) ])))))) ]))))
 , (L
    { :11:1-33 }
    (ValD
     (L
      { :11:5-33 }
      (NonRec
       [ (L
          { :11:5-33 }
          (Bind
           f3: int -> int
           (L
            { :11:5-7 }
            (PatVar
             int -> int
             (L
              { :11:5-7 }
              "f3")))
           (L
            { :11:8-33 }
            (ExprFunction
             int -> int
             (L
              { :11:8-9 }
              (PatVar
               int
               (L
                { :11:8-9 }
                "x")))
             (L
              { :11:12-33 }
              (ExprApply
               int
               (L
                { :11:13-14 }
                (ExprIdent
                 int -> int -> int
                 "-"))
               [ (L
                  { :11:12-13 }
                  (ExprIdent
                   int
                   "x"))
               , (L
                  { :11:14-33 }
                  (ExprConstant int int
                   9223372036854775807)) ])))))) ]))))
 , (L
    { :14:1-34 }
    (ValD
     (L
      { :14:5-34 }
      (NonRec
       [ (L
          { :14:5-34 }
          (Bind
           f4: forall 's. (int -> 's) -> 's
           (L
            { :14:5-7 }
            (PatVar
             (int -> 's) -> 's
             (L
              { :14:5-7 }
              "f4")))
           (L
            { :14:8-34 }
            (ExprFunction
             (int -> 's) -> 's
             (L
              { :14:8-9 }
              (PatVar
               int -> 's
               (L
                { :14:8-9 }
                "x")))
             (L
              { :14:12-34 }
              (ExprApply
               's
               (L
                { :14:12-13 }
                (ExprIdent
                 int -> 's
                 "x"))
               [ (L
                  { :14:14-34 }
                  (ExprConstant int int
                   -9223372036854775808)) ])))))) ])))) ])